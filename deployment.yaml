# name: Store Docker Image on S3

# on:
#   push:
#     branches:
#       - main

# jobs:
#   store_image:
#     name: Store Docker Image
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Build Docker image
#         run: |
#           docker build -t your-image-name:latest .
#           docker save -o your-image-name.tar your-image-name:latest

#       - name: Upload Docker image to S3
#         uses: jakejarvis/s3-sync-action@master
#         with:
#           args: --acl public-read --follow-symlinks --delete
#         env:
#           AWS_S3_BUCKET: protial-prod-s3-b
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}




  # deploy:
  #   name: Deploy to ECS Fargate
  #   runs-on: ubuntu-latest
  #   needs: build  # Ensure the 'deploy' job runs only after the 'build' job is completed successfully

  #   steps:
  #     - name: Download Docker image from S3
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: your-image-name.tar

  #     - name: Load Docker image
  #       run: |
  #         docker load -i your-image-name.tar
  #         docker tag your-image-name:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/your-image-name:latest

  #     - name: Login to AWS ECR
  #       uses: aws-actions/amazon-ecr-login@v1

  #     - name: Push Docker image to ECR
  #       run: |
  #         docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/your-image-name:latest

  #     - name: Deploy to ECS Fargate
  #       run: |
          # Use AWS CLI or ECS CLI to deploy to ECS Fargate
          # Example:
          # ecs-cli compose --project-name your-project-name service up --create-log-groups --cluster your-cluster-name --launch-type FARGATE
